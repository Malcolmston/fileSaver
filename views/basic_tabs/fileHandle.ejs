<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Draw app</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
</head>

<body>
    


<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js"
  integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.min.js"
  integrity="sha384-BBtl+eGJRgqQAUMxJ7pMwbEyER4l1g+O15P+16Ep7Q9Q+zqX6gSbd85u4mG4QzX+" crossorigin="anonymous"></script>
<script src="https://kit.fontawesome.com/fd76b8450f.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="../../../table.js"></script>

<script >
  function changeFile(id, newFile) {
  // Assuming username, originalName, and newFile are already defined

  // Configuration for the fetch request
  const options = {
    method: 'PUT',
    headers: {
      'Content-Type': 'application/json'
    },
  };

  // Sending the fetch request
  fetch(`/api/v1/fileRename?username="<%= username %>"fileId=${id}&newFileName=${newFile}`, options)
    .then(response => {
      if (!response.ok) {
       console.error('Network response was not ok');
      }
      return response.json(); // Assuming response is JSON
    })
    .then(data => {
      console.log('Request succeeded with JSON response:', data);
      reload(); // Reload the page or perform other actions
      // Handle response data as needed
    })
    .catch(error => {
      console.error('Request failed:', error);
      // Handle errors
    });

}

function removeFile(id) {
  // Assuming username, originalName, and newFile are already defined

  // Configuration for the fetch request
  const options = {
    method: 'put',
    headers: {
      'Content-Type': 'application/json'
    },
  };

  // Sending the fetch request
  fetch(`/api/v1/fileDelete?id=${id}`, options)
    .then(response => {
      if (!response.ok) {
       console.error('Network response was not ok');
      }
      return response.json(); // Assuming response is JSON
    })
    .then(data => {
      console.log('Request succeeded with JSON response:', data);
      reload(); // Reload the page or perform other actions
      // Handle response data as needed
    })
    .catch(error => {
      console.error('Request failed:', error);
      // Handle errors
    });

}


  const data = JSON.parse( ("<%= files %>").replaceAll("&#34;", "\"") )

  let inputs = document.createElement("span")
  let table = createDOMtable(data);

  inputs.innerHTML = "<%= size %>"
  
  document.body.append(
    inputs
      )

table.addEventListener("click",function(e){
        let elements =  e.target.parentNode.querySelectorAll("th")
        if( parseInt(elements[0].innerHTML, 10) == NaN || parseInt(elements[0].innerHTML, 10) === null ) return;

        let id = parseInt(elements[0].innerHTML)


        parent.postMessage(id, '*'); // '*' allows sending messages to any origin


      })

  document.body.append(table)
  
  </script>

</body>


</html>