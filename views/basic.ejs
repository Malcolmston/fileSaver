<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Draw app</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">

  <link href="./dropZone.css" rel="stylesheet" type="text/css">

</head>

<body>

  <ul class="nav nav-pills mb-3" id="pills-tab" role="tablist">
    <li class="nav-item" role="presentation">
      <button class="nav-link active" id="pills-home-tab" data-bs-toggle="pill" data-bs-target="#pills-home"
        type="button" role="tab" aria-controls="pills-home" aria-selected="true">Home</button>
    </li>

    <li class="nav-item" role="presentation">
      <button class="nav-link" id="pills-files-tab" data-bs-toggle="pill" data-bs-target="#pills-files" type="button"
        role="tab" aria-controls="pills-files" aria-selected="false">my Files</button>
    </li>




    <li class="nav-item" role="presentation">
      <button class="nav-link" id="pills-profile-tab" data-bs-toggle="pill" data-bs-target="#pills-profile"
        type="button" role="tab" aria-controls="pills-profile" aria-selected="false">Profile</button>
    </li>


    <li class="nav-item" role="presentation">
      <button class="nav-link" id="pills-contact-tab" data-bs-toggle="pill" data-bs-target="#pills-contact"
        type="button" role="tab" aria-controls="pills-contact" aria-selected="false">Contact</button>
    </li>

    <li class="nav-item" role="presentation">
      <button class="nav-link" id="pills-rooms-tab" data-bs-toggle="pill" data-bs-target="#pills-rooms"
        type="button" role="tab" aria-controls="pills-rooms" aria-selected="false">Rooms</button>
    </li>

  </ul>
  <div class="tab-content" id="pills-tabContent">
    <div class="tab-pane fade show active" id="pills-home" role="tabpanel" aria-labelledby="pills-home-tab"
      tabindex="0">
      <%- include('./basic_tabs/fileUpload'); %>
    </div>

    <div class="tab-pane fade" id="pills-files" role="tabpanel" aria-labelledby="pills-files-tab" tabindex="0">
      <%- include('./basic_tabs/myFiles'); %>
    </div>


    <div class="tab-pane fade" id="pills-profile" role="tabpanel" aria-labelledby="pills-profile-tab" tabindex="0">
      <%- include('./basic_tabs/changeForms'); %>
    </div>

    <div class="tab-pane fade" id="pills-rooms" role="tabpanel" aria-labelledby="pills-rooms-tab" tabindex="0">
      <fieldset>
        <legend>Select a room:</legend>
        <div class="roomPlaceholder"></div>

      </fieldset>

    </div>




    <div class="tab-pane fade" id="nav-password" role="tabpanel" aria-labelledby="nav-password-tab" tabindex="0">
      <form id="form_5" class="needs-validation" novalidate>


        <label for="curr_password" class="form-label">current password</label>
        <input type="text" name="curr_password" id="curr_password" class="form-control" required />
        <div class="invalid-feedback">
          Please provide a valid Password.
        </div>


        <label for="password" class="form-label">Password</label>
        <input type="text" name="password" id="password" class="form-control" required />
        <div class="invalid-feedback">
          Please provide a valid Password.
        </div>


        <input type="submit" value="set new Password" class="btn btn-primary" />


      </form>
    </div>


  </div>



  </div>
  <div class="tab-pane fade" id="pills-contact" role="tabpanel" aria-labelledby="pills-contact-tab" tabindex="0">


  </div>
  </div>



</body>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js"
  integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.min.js"
  integrity="sha384-BBtl+eGJRgqQAUMxJ7pMwbEyER4l1g+O15P+16Ep7Q9Q+zqX6gSbd85u4mG4QzX+" crossorigin="anonymous"></script>
<script src="https://kit.fontawesome.com/fd76b8450f.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>


<script type="text/javascript" src="./fileHandle.js"></script>

<% if( message.trim().length !=0 ){ %>
  <script>

    toast_message.error("<%= message %>")

  </script>
  <% } %>

    </body>

</html>





<script>
  const username = '<%=username%>';


  function changeFile(id, newFile) {
    // Assuming username, originalName, and newFile are already defined

    // Configuration for the fetch request
    const options = {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json'
      },
    };

    // Sending the fetch request
    fetch(`/api/v1/fileRename?username=${username}&fileId=${id}&newFileName=${newFile}`, options)
      .then(response => {
        if (!response.ok) {
          console.error('Network response was not ok');
        }
        return response.json(); // Assuming response is JSON
      })
      .then(data => {
        console.log('Request succeeded with JSON response:', data);
        reload(); // Reload the page or perform other actions
        // Handle response data as needed
      })
      .catch(error => {
        console.error('Request failed:', error);
        // Handle errors
      });

  }

  function removeFile(id) {
    // Assuming username, originalName, and newFile are already defined

    // Configuration for the fetch request
    const options = {
      method: 'put',
      headers: {
        'Content-Type': 'application/json'
      },
    };

    // Sending the fetch request
    fetch(`/api/v1/fileDelete?username=${username}&fileId=${id}`, options)
      .then(response => {
        if (!response.ok) {
          console.error('Network response was not ok');
        }
        return response.json(); // Assuming response is JSON
      })
      .then(data => {
        console.log('Request succeeded with JSON response:', data);
        reload(); // Reload the page or perform other actions
        // Handle response data as needed
      })
      .catch(error => {
        console.error('Request failed:', error);
        // Handle errors
      });

  }


  function restoreFile(id) {
    // Assuming username, originalName, and newFile are already defined

    // Configuration for the fetch request
    const options = {
      method: 'put',
      headers: {
        'Content-Type': 'application/json'
      },
    };

    // Sending the fetch request
    fetch(`/api/v1/fileRestore?username=${username}&fileId=${id}`, options)
      .then(response => {
        if (!response.ok) {
          console.error('Network response was not ok');
        }
        return response.json(); // Assuming response is JSON
      })
      .then(data => {
        console.log('Request succeeded with JSON response:', data);
        reload(); // Reload the page or perform other actions
        // Handle response data as needed
      })
      .catch(error => {
        console.error('Request failed:', error);
        // Handle errors
      });

  }


  window.addEventListener('message', function (event) {
    let id = event.data

    return new Promise(async (resolve, reject) => {
      const { value: file } = await Swal.fire({
        title: "Select option",

        imageUrl: `/api/v1/getFile?username=${username}&id=${id}&json=false`,
        imageWidth: 300,
        imageHeight: 300,
        //showCancelButton: true,
        input: "select",
        inputOptions: {
          1: "Rename file",
          2: "Delete file",
          3: "Restore file"
        },
        inputValidator: (value) => {
          if (!value) {
            return "You need to choose something!";
          } else {
            if (value == 1) {

              Swal.fire({
                title: "Enter your a file name",
                input: "text",
                inputLabel: "A file name",
                showCancelButton: true,
                inputValidator: (value) => {
                  if (!value) {
                    return "You need to write something!";
                  }
                }
              }).then((json) => {
                if (json.isConfirmed) {
                  changeFile(id, json.value)
                  toast_message.success("file re-named");
                } else {
                  toast_message.error("File was not re-named")
                }
              })
            } else if (value == 2) {
              removeFile(id);
            } else if (value == 3 ) {
              restoreFile(id)
            }
          }
        }

      })
    })

  });


  function reload() {
    document.querySelector("iframe").contentWindow.location.reload();

  }

  fetch("/getRooms").then(data => data.json()).then(data => {
          let roomPlaceholder = $(".roomPlaceholder");
          for(let name of data.arr){
            roomPlaceholder.append(`          
    <div>
    <input type="button" id="${name}" name="room" value="${name}" />
  </div>
`);
          }
          $("[type='button']").on("click", e => {
          let room = $(e.target).val() 

          window.open("/room/open/"+room);
         // $("#myFiles").attr("src",`/api/v1/roomFiles?username=${username}&room=${currenRoom}`)
        })

        


        });
</script>


</body>

</html>