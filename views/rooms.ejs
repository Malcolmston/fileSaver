<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <link href="/dropZone.css" rel="stylesheet" type="text/css">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">

    <style>
        [role="tabpanel"] 
        iframe {
          width: 400%;
        }

        p,
        label {
          font:
            1rem 'Fira Sans',
            sans-serif;
        }

        input {
          margin: 0.4rem;
        }

    </style>


</head>

<body>

  <div class="d-flex align-items-start">
    <div class="nav flex-column nav-pills me-3" id="v-pills-tab" role="tablist" aria-orientation="vertical">
      <button class="nav-link active" id="v-pills-runHub-tab" data-bs-toggle="pill" data-bs-target="#v-pills-runHub"
        type="button" role="tab" aria-controls="v-pills-runHub" aria-selected="true">Room hub</button>
      <button class="nav-link" id="v-pills-file-tab" data-bs-toggle="pill" data-bs-target="#v-pills-file" type="button"
        role="tab" aria-controls="v-pills-file" aria-selected="false">File hub</button>
      <button class="nav-link" id="v-pills-gfile-tab" data-bs-toggle="pill" data-bs-target="#v-pills-gfile"
        type="button" role="tab" aria-controls="v-pills-gfile" aria-selected="false">Group fils</button>
        <button class="nav-link" id="v-pills-settings-tab" data-bs-toggle="pill" data-bs-target="#v-pills-settings"
        type="button" role="tab" aria-controls="v-pills-settings" aria-selected="false">Group settings</button>


    </div>
    <div class="tab-content" id="v-pills-tabContent">
      <div class="tab-pane fade show active" id="v-pills-runHub" role="tabpanel" aria-labelledby="v-pills-runHub-tab"
        tabindex="0">
        <iframe src="/myRooms/<%= room %>"></iframe>
      </div>

      <div class="tab-pane fade" id="v-pills-file" role="tabpanel" aria-labelledby="v-pills-file-tab" tabindex="0">

        <fieldset>
          <legend>Select a room:</legend>
          <div class="roomPlaceholder"></div>

        </fieldset>

        <div id="drop_zone" ondrop="dropHandler(event);" ondragover="dragOverHandler(event);"
          onclick="chooseFile(event);">
          <label for="exampleInput" onclick="chooseFile(event);">Drag one or more files to this drop zone</label>

        </div>

        <div id="prevew">
        </div>

      </div>


      <div class="tab-pane fade" id="v-pills-gfile" role="tabpanel" aria-labelledby="v-pills-gfile-tab" tabindex="0">
        <iframe src="/myFiles/<%= room %>"></iframe>
      </div>

      <div class="tab-pane fade" id="v-pills-settings" role="tabpanel" aria-labelledby="v-pills-settings-tab" tabindex="0">
        
        <form action="javascript:void(0);" class="result">
          <p><b>Start typing a name in the input field below:</b></p>
          <p> 
          Name: <input type="text" id="txt1" onkeyup="showHint(this.value)" size="20" autocomplete="false">
          &nbsp;&nbsp;Suggestions: <span id="txtHint"></span>
          </p>
          </form>

          <form>
            <ul id="usersList"></ul>

            <input type="submit" value="submit" name="submit" id="submit">
          </form>
          

      </div>





      <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js"
        integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r"
        crossorigin="anonymous"></script>
      <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.min.js"
        integrity="sha384-BBtl+eGJRgqQAUMxJ7pMwbEyER4l1g+O15P+16Ep7Q9Q+zqX6gSbd85u4mG4QzX+"
        crossorigin="anonymous"></script>
      <script src="https://kit.fontawesome.com/fd76b8450f.js"></script>
      <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
      <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
      <script type="text/javascript" src="/table.js"></script>
      <script type="text/javascript">
        let formData = new FormData();
const toast_message = {
  Toast: Swal.mixin({
    toast: true,
    position: "top-end",
    showConfirmButton: false,
    timer: 3000,
    timerProgressBar: true,
    didOpen: (toast) => {
      toast.onmouseenter = Swal.stopTimer;
      toast.onmouseleave = Swal.resumeTimer;
    }
  }),

  error: function (message) {
    this.Toast.fire({
      icon: "error",
      title: message
    });
  },

  success: function (message) {
    this.Toast.fire({
      icon: "success",
      title: message
    });
  }

}

function icon(type) {
  switch (type) {
    case "txt":
      return "https://cdn-icons-png.flaticon.com/512/4248/4248224.png";
    case "png":
      return "https://cdn-icons-png.flaticon.com/512/8243/8243033.png";
    case "svg":
    case "svg+xml":
      return "https://cdn-icons-png.flaticon.com/512/5063/5063253.png";
    case "jpeg":
      return "https://cdn-icons-png.flaticon.com/512/7858/7858983.png";
    case "obj":
      return "https://cdn-icons-png.flaticon.com/512/29/29536.png";
    case "gif":
      return "https://cdn-icons-png.flaticon.com/512/2306/2306094.png";
    case "webp":
      return "https://cdn-icons-png.flaticon.com/512/8263/8263118.png";
    case "bmp":
      return "https://cdn-icons-png.flaticon.com/512/8085/8085527.png";
    case "ico":
      return "https://cdn-icons-png.flaticon.com/512/1126/1126873.png";
    case "tif":
      return "https://cdn-icons-png.flaticon.com/512/8176/8176632.png";
    case "sql":
      return "https://cdn-icons-png.flaticon.com/512/4299/4299956.png";
    case "js":
    case "x-javascript":
      return "https://cdn-icons-png.flaticon.com/512/8945/8945622.png";
    case "json":
      return "https://cdn-icons-png.flaticon.com/512/136/136525.png";
    case "ts":
      return "https://cdn-icons-png.flaticon.com/512/8300/8300631.png";
    case "md":
      return "https://cdn-icons-png.flaticon.com/512/617/617467.png";
    case "cc":
      return "https://cdn-icons-png.flaticon.com/512/9095/9095099.png";
    case "cs":
      return "https://cdn-icons-png.flaticon.com/512/2306/2306037.png";
    case "c":
      return "https://cdn-icons-png.flaticon.com/512/3585/3585350.png";
    case "csv":
      return "https://cdn-icons-png.flaticon.com/512/9159/9159105.png";
    case "t":
      return "https://cdn-icons-png.flaticon.com/512/4490/4490695.png";
    case "r":
      return "https://cdn-icons-png.flaticon.com/512/8112/8112727.png";
    case "d":
      return "https://cdn-icons-png.flaticon.com/512/8112/8112877.png";
    case "h":
      return "https://cdn-icons-png.flaticon.com/512/8112/8112548.png";
    case "cs":
      return "https://cdn-icons-png.flaticon.com/512/7496/7496950.png";
    case "css":
      return "https://cdn-icons-png.flaticon.com/128/136/136527.png";
    case "html":
      return "https://cdn-icons-png.flaticon.com/512/136/136528.png";
    case "htm":
      return "https://cdn-icons-png.flaticon.com/512/136/136528.png";
    case "stylus":
      return "https://cdn-icons-png.flaticon.com/512/3650/3650875.png";
    case "sass":
      return "https://cdn-icons-png.flaticon.com/512/919/919831.png";
    case "php":
      return "https://cdn-icons-png.flaticon.com/512/2306/2306154.png";
    case "py":
      return "https://cdn-icons-png.flaticon.com/512/3098/3098090.png";
    case "node":
      return "https://cdn-icons-png.flaticon.com/512/5968/5968322.png";
    case "mp3":
      return "https://cdn-icons-png.flaticon.com/512/2306/2306139.png";
    case "mp4":
      return "https://cdn-icons-png.flaticon.com/512/1719/1719843.png";
    case "wav":
      return "https://cdn-icons-png.flaticon.com/512/8263/8263140.png";
    case "acc":
      return "https://cdn-icons-png.flaticon.com/512/8300/8300275.png";
    case "flac":
      return "https://cdn-icons-png.flaticon.com/512/730/730567.png";
    case "mp2":
      return "https://cdn-icons-png.flaticon.com/512/8300/8300531.png";
    case "mp1":
      return "https://cdn-icons-png.flaticon.com/512/8300/8300500.png";
    case "doc":
      return "https://cdn-icons-png.flaticon.com/512/4725/4725970.png";
    case "pdf":
    case "octet-stream":
      return "https://cdn-icons-png.flaticon.com/512/136/136522.png";
    case "jpg":
      return "https://cdn-icons-png.flaticon.com/512/337/337940.png";
    case "xls":
      return "https://cdn-icons-png.flaticon.com/512/3997/3997638.png";
    default:
      return "https://cdn-icons-png.flaticon.com/512/660/660726.png";
  }
}

function dropHandler(ev) {
  console.log("File(s) dropped");

  // Prevent default behavior (Prevent file from being opened)
  ev.preventDefault();

  let files = ev.dataTransfer

  document.querySelector("#prevew").innerHTML = ""
  let data = [];
  if (files.items) {
    let arr = [...files.items].map(item => {
      if (item.kind === "file") {
        return item.getAsFile();
      } else {
        return false;
      }
    }).filter(x => x)
    handleFiles(arr)

  } else {
    // Use DataTransfer interface to access the file(s)
    handleFiles([...files.files]);


  }



}


function dragOverHandler(ev) {
  //console.log("File(s) in drop zone");

  // Prevent default behavior (Prevent file from being opened)
  ev.preventDefault();
}

function chooseFile(ev) {
  console.log("choosing files");
  // Prevent default behavior (Prevent file from being opened)
  ev.preventDefault();

  const inputFile = document.createElement('input');
  inputFile.type = 'file';
  inputFile.hidden = true;
  inputFile.multiple = true;
  //document.body.appendChild(inputFile);
  inputFile.click();

  inputFile.addEventListener('change', noDragFile);


}



function noDragFile(ev) {
  const files = ev.target.files;


  // Do something with the selected files
  handleFiles([...files])

}

function handleFiles(files) {
  let data = []
  files.forEach((file, i) => {
    let { name, size, type } = file
    data.push({ name, size, type: icon(type.split('/')[1]) })
    formData.append('file', file);
  });
  document.querySelector("#prevew").innerHTML = "<input type=\"submit\" value=\"Upload File\" onclick=\"submitData(event)\">";
  let table = createDOMtable(data);
  document.querySelector("#prevew").append(table)

  return formData;
}


        async function submitData (ev) {
  ev.preventDefault();



  fetch('/room/fileupload/<%= room %>', {
    method: 'POST',
    body: formData
  })
    .then(data => {
      if( data.ok){
        toast_message.success('Files were uploaded successfully');
      }else{
        toast_message.error(data.message);
      }
      
    })
    .catch(error => {
      console.error(error);
      t
    });

  document.querySelector("#prevew").innerHTML = ""
  formData = new FormData();
}
      </script>

      <script type="text/javascript">
        const username = "<%= username %>";
        const room = "<%= room %>";

const submit = $("#submit");

const txtHint = $("#txtHint");
const usersList = $("#usersList");

usersList.append(`<li>${username}</li>`);

function showHint(txt) {
    txtHint.html(""); // Clear previous contents
    
    var xhttp = new XMLHttpRequest();
    xhttp.onreadystatechange = function() {
        if (this.readyState == 4 && this.status == 200) {
            // Typical action to be performed when the document is ready:
            let json = JSON.parse(xhttp.responseText);
            
            for (let row of json) {
              let element = $(`<div></div>`)
              let btn = $(`<button>${row.username}</button>`);

              element.append(btn);
              btn.bind("click", (event) => {

                let li = $("<li></li>");
                let text = $(event.target).text();
                let j = $("<input type='button' value='X'>");
                let c = $("<input type='button' value='✔'>");

                let div = $("<div></div>");
                div.append(text);
                div.append(j, c);

                li.append(div);

                usersList.append(li);


                j.on("click",e => {
                  li.remove();
                })

                c.on("click",e => {
                  div.remove();
                  
                  li.text(text);
                  })                

              })

              txtHint.append(element);
             
            }
            
        }
    };
    
    xhttp.open("GET", `/api/v1/users?username=${username}&search=${txt}`, true);
    xhttp.send();
}
      
submit.on("click", function(e){
e.preventDefault();
let arr = []

usersList.children().each(x => {
    let element = $(usersList.children().get(x))

    if (element.prop("tagName") == "LI" && element.children().length == 0) {
        arr.push(element.text())
    } else {
        toast_message.error("You have unspecified users in your list of users.\nTo continue, please resolve")
        return -1;
    }
})

// Assuming `arr` is the data you want to send
// Append each value from `arr` to FormData object


fetch("/room/createNew", {
  method: "PUT",
  body: JSON.stringify({
    users: arr
  }),
  headers: {
    "Content-type": "application/json; charset=UTF-8"
  }
}).then(response => response.json())
    .then(data => console.log(data))
    .catch(error => console.error('Error:', error));



//  f.append("elements", )
})
      </script>


</body>

</html>